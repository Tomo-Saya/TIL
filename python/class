# クラスの作り方
class クラス名CamelCase(object):  (objectは継承元のクラス名を記述する。objectの場合は記述不要)
    def __init__ (self, 引数1, 引数2, 引数3...):  引数と属性は違う単語で問題ないが、便宜上基本的には同じ単語にする。
    self.属性1 = 引数1
    self.属性2 = 引数2
    self.属性3 = 引数3

# インスタンス生成
インスタンス名 = (引数1, 引数2, 引数3...)

# クラスメソッド
def メソッド名(self):
    実行内容


# インスタンス変数とクラス変数
・インスタンス変数：インスタンスに紐づいている変数
　・<インスタンス名>.<インスタンス変数>で変数にアクセスする
・クラス変数：クラスに紐づいている変数　どのインスタンスでも同クラスから生成されていれば使用できる
　・<クラス名>.<クラス変数>で変数にアクセスする
　・<インスタンス名>.<クラス変数>でも変数にアクセスできるが、上書きしないように注意

# スタティックメソッド(static method)
・インスタンスに紐付かないメソッド（クラスに紐付く）
・@staticmethodデコレータを使う
・主にクラス内で便利関数のように使用する
・引数にselfを取らない（インスタンスの情報を使わない為）
・クラスからアクセスしてcallする(<Class>.<staticmethod>())
・クラスの情報を使う場合はクラスメソッドを使う

# クラスメソッド
・インスタンスに紐付かないメソッド
・@classmethodデコレータを使う
・主にクラス内で便利関数のように使用する
・引数にclsを取ってクラスの情報にアクセスできる
・クラスからアクセスしてcallする(<class>.<staticmethod>)
・クラスの情報を使わない場合はスタティックメソッドを使う
・クラスメソッド内でインスタンスを生成して返すことも可能
