11/1　TECH CAMP
#link_toメソッド...<%= link_to 'リンクに表示する文字', 'リンク先URL' %>
リンク実装に用いるヘルパーメソッド

#validatesメソッド...validates :フィールド（属性）,presence: true
"presence: true"はフィールドが存在する必要があるという意味。⇒空の場合はDBに保存しない。

#applocation.html.erb
標準の状態では、このファイルに記述したコードは全てのビューで表示される。どのページでも常に表示させたい際に記述する。

#yield
コントローラーのアクション実行後に生成されるビューを埋め込むメソッド
yieldを使用することで実行されたアクションによって表示されるビューの内容を切り替えることができる。
ヘッダーはページ上部に表示させる必要があるため、必ずyieldよりも上に記述する。

#authenticate_user!メソッド...before_action :authenticate_user!
ログイン状態によって表示するページを切り替えるdeviseメソッド
autenticate_user!メソッドは処理が呼ばれた段階でユーザーがログインしていなければ、そのユーザーをログイン画面に遷移させる。
この仕組みを利用してbefore_actionで呼び出すことで、アクションを実行する前にログインしていなければログイン画面に遷移させることができる。

#renderメソッド...ex)render :edit, status: :unprocessable_entity　何らかの処理に失敗したという汎用的な指定方法
呼び出すビューファイルを指定するメソッド
コントローラーとビューで使用するものがあり、機能は別物である。

#references型...t.referencees :カラム名
Railsで外部キーのカラムを追加する際に用いる型のこと
t.references :userと記載した場合、user_idというカラムが生成される。
foreign_key: trueという記述を加えることで、外部キー制約を設定できる。

#has_manyメソッド...has_many :モデル名
　アクティブレコードモデル間の1対多の関係を設定
　通常、親モデルから子モデルへのリレーションシップを表現する。
　親モデルは複数の子モデルを持つことができる。

#belongs_toメソッド
　アクティブレコードモデル間の1対1または多対1の関係を設定
　通常、子モデルから親モデルへのリレーションシップを表現する。
　子モデルは通常、親モデルに外部キー持ち、belongs_toメソッドを使用してこれらの関係を確立する。
