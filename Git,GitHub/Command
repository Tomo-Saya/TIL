# Gitの流れ
1.リポジトリをコピー(clone)
2.ファイルを更新してコミット
3.ブランチを作成
4.ローカルリポをリモートリポに反映(push)
5.ブランチをmainにマージ
6.リモートリポをローカルリポに反映(pull)
7.不要なブランチを削除

# フォルダ作成・削除
mkdir フォルダ名...新規フォルダ作成
rm -r フォルダ名...フォルダ削除

# ファイル作成・削除
touch ファイル名...新規ファイル作成
rm ファイル名...ファイル削除

# Gitユーザーの設定
git config --global use.name "ユーザー名"
git config --global use.email "メールアドレス"

# リモートリポからcloneしてローカルリポを作成
git clone リモートリポのURL
*GitHubから取得する
*カレントディレクトリに保存される

# 新しいブランチを切る
git branch ブランチ名
*$git branch -a　リモートリポを含むローカルリポに存在する全てのブランチを表示する
*$git branch -m <branchname1> <branchname2>: ブランチ名の変更
*$git branch -d <branchname>: ブランチの削除

# 作業するブランチの切り替え
git checkout ブランチ名
*$git checkout -b
  ブランチ名　作成して切り替えることができる

# 作業状態を確認する
git status

# 作業内容をStaging areaに追加する
git add
*git add.　カレントディレクトリ配下の全ファイル、フォルダをStaging areaに追加する

# Staging areaの内容をコミットする
git commit -m "コミットメッセージ"
*必ずコミットメッセージをつける（1行）

# コミット履歴を表示する
git log

# リモートリポの更新をローカルリポに反映する
git pull <remote_ref> <branchname>

# ローカルリポの更新をリモートリポに反映する
git push <remote_ref> <branchname>

# 特定のブランチを削除する
git branch -d ブランチ名
*mainにマージしていないブランチは基本的には削除できない

# スクラッチからgitリポジトリを作成する
git init プロジェクト名
*カレントディレクトリに.gitフォルダ入りのプロジェクト名フォルダが作成される
*initialポイントは作られない

# 既存のディレクトリをgitリポにする
git init
*カレントディレクトリに.gitフォルダが作成される

# 指定したブランチを今いるブランチにマージする
$git merge <branchname>
*git diff <base> <compare>: baseブランチをベースとしたcompareブランチとの差分を表示する
 たいていの場合、compareブランチが新しい変更などを施したブランチ

# リモートリポから情報を取得する
$git fetch <remote_ref>
*情報を取得するだけでマージはしない
*remote_refはリモートリポのリファレンス名　省略するとoriginになる

# リモートリポから情報を取得し、今のブランチにマージする
$git pull <remoto_ref> <branchname>
*指定したリモートリポの指定したブランチを今いるブランチにマージする
*基本的にはpush前にpullする
